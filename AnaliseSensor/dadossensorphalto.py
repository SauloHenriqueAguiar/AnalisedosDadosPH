# -*- coding: utf-8 -*-
"""dadossensorPHAlto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f3wx5iz6bG0ZCxmZmrVGwx_GApRJ8pQJ
"""

import json

if __name__ == "__main__":

    json_file = open("/content/bancofirebasedadossensopHAlto.json")
    dic = json.load(json_file)
    print(dic)

    arr = []

    for item in dic:
        arr.append(dic[item])

    print(arr)

import pandas as pd
dfra = pd.DataFrame(columns=["humidity","pH","temperature","timestamp"])

for i in range(0, len(arr)):
  currentItem = arr[i]
  dfra.loc[i] = [arr[i]["humidity"], arr[i]["pH"], arr[i]["temperature"], arr[i]["timestamp"]]

dfra

print(dfra.dtypes)

dfra['timestamp'] = dfra['timestamp'].astype(int)
dfra['humidity'] = dfra['humidity'].astype(float)
dfra['pH'] = dfra['pH'].astype(float)
dfra['temperature'] = dfra['temperature'].astype(float)

print(dfra.dtypes)

dfra['Datetime'] = pd.to_datetime(dfra['timestamp'],
                                  unit='s')

dfra['Datetime']

dfra

## features 

features_3 = ['temperature', 'humidity', 'pH']

features = dfra[features_3]
features.index = dfra['Datetime']
features.head()

features.describe()

features.mean()

import matplotlib.pyplot as plt
import matplotlib as mpl
import pandas as pd
import numpy as np
import os

mpl.rcParams['figure.figsize'] = (16,8)
mpl.rcParams['axes.grid'] = False

features.plot(subplots=True)

cP = features['pH']
var = np.var(cP)

# Valores que aparecem no grafico de pH
features['pH'].hist(bins=100)
plt.tight_layout()
plt.show()

import seaborn as sns
sns.distplot(cP)

#variancia 

print(var)

#desvio padr√£o
des = np.std(cP)
print(des)

#Assimetria (Skewness)
assimetria = cP.skew()
print('Assimetria(Skewness) ', assimetria)

#Curtose (Kurtosis)
curtose = cP.kurtosis()
print('Curtose ', curtose)